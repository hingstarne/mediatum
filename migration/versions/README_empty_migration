"""
XXX: alembic --autogenerate generates nonsensical foreign key migrations.
They must be removed manually after generating the version file (see below).
Why? Can we fix it? Looks like it has something to do with schemas.
These alter_column statements don't make sense, either.
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'access_ruleset_to_rule', 'access_ruleset', ['ruleset_name'], ['name'], source_schema='mediatum', referent_schema='mediatum', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'access_ruleset_to_rule', 'access_rule', ['rule_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'fts', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.create_foreign_key(None, 'node_alias', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'node_to_access_rule', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.create_foreign_key(None, 'node_to_access_rule', 'access_rule', ['rule_id'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.create_foreign_key(None, 'node_to_access_ruleset', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.create_foreign_key(None, 'node_to_access_ruleset', 'access_ruleset', ['ruleset_name'], ['name'], source_schema='mediatum', referent_schema='mediatum', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'nodefile', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.create_foreign_key(None, 'noderelation', 'node', ['nid'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'noderelation', 'node', ['cid'], ['id'], source_schema='mediatum', referent_schema='mediatum', ondelete='CASCADE')
    op.alter_column('oauth_user_credentials', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('oauth_user_credentials', 'oauth_key',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('oauth_user_credentials', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'oauth_user_credentials', 'user', ['user_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'transaction', 'user', ['user_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'user', 'usergroup', ['private_group_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'user', 'authenticator', ['authenticator_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'user', 'node', ['home_dir_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'user_to_usergroup', 'user', ['user_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    op.create_foreign_key(None, 'user_to_usergroup', 'usergroup', ['usergroup_id'], ['id'], source_schema='mediatum', referent_schema='mediatum')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_to_usergroup', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'user_to_usergroup', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'user', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'user', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'user', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'transaction', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'oauth_user_credentials', schema='mediatum', type_='foreignkey')
    op.alter_column('oauth_user_credentials', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('oauth_user_credentials', 'oauth_key',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('oauth_user_credentials', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(None, 'noderelation', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'noderelation', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'nodefile', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'node_to_access_ruleset', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'node_to_access_ruleset', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'node_to_access_rule', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'node_to_access_rule', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'node_alias', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'fts', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'access_ruleset_to_rule', schema='mediatum', type_='foreignkey')
    op.drop_constraint(None, 'access_ruleset_to_rule', schema='mediatum', type_='foreignkey')
    ### end Alembic commands ###
